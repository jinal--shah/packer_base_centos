#!/bin/bash
# vim: et sr sw=4 ts=4 smartindent:
# set_eurostar_env_in_service_info.sh
#
# Gets env from aws tag and writes to /etc/eurostar/eurostar_service_info
#
# There is some logic to map the various synonymous vals for each env
# to be one of int | test | perf | pre | prod
#
# *** Anything that is not mapped to one of list ***
# *** above is assumed to be an ephemeral env    ***
#
AWS_INFO_FILE=/etc/eurostar/aws_instance_info
if [[ -f /etc/eurostar/aws_instance_info ]]; then
    . $AWS_INFO_FILE
fi


REQUIRED_VARS="
    AWS_INSTANCE_ID
    AWS_REGION
"

INFO_FILE=/etc/eurostar/eurostar_service_info
FAILED_VALIDATION=''
TIMESTAMP="$(date +'%Y-%m-%d %H:%M:%S')"
OUTPUT_STR=""

env_val=$(/usr/local/bin/get_eurostar_env_from_aws_tag.sh)

# ... now massage synonyms or else keep this val
if [[ $env_val =~ ^[pP]rod(uction)?|[Ll]ive?$ ]]; then
    env_val="prod"
elif [[ $env_val =~ ^[Pp]re-?prod(uction)?$ ]];then
    env_val="pre"
elif [[ $env_val =~ ^[Pp]erf(ormance)?$ ]];then
    env_val="perf"
elif [[ $env_val =~ ^[Tt]e?st$ ]];then
    env_val="test"
elif [[ $env_val =~ ^[Ii]nt(egration)?$ ]];then
    env_val="int"
fi

if [[ -f $INFO_FILE ]]; then
    pattern="EUROSTAR_ENVIRONMENT GENERATED BY "
    sed -i "/$pattern/,/END $pattern/d" $INFO_FILE
fi

# ... write val to file
cat << EOF >> $INFO_FILE
# [$TIMESTAMP] EUROSTAR_ENVIRONMENT GENERATED BY $0
EUROSTAR_ENV=$env_val
# END EUROSTAR_ENVIRONMENT GENERATED BY $0
EOF

cat $INFO_FILE

