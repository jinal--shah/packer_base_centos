{
  "variables": {
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_instance_type": "{{env `AWS_INSTANCE_TYPE`}}",
    "aws_region": "{{env `AWS_REGION`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
    "base_ami": "{{env `BASE_AMI`}}",
    "base_domain": "{{env `BASE_DOMAIN`}}",
    "build_id": "{{env `BUILD_ID`}}",
    "code_branch": "{{env `CODE_BRANCH`}}",
    "eurostar_release_version": "{{env `EUROSTAR_RELEASE_VERSION`}}",
    "eurostar_service_name": "{{env `EUROSTAR_SERVICE_NAME`}}",
    "eurostar_service_role": "{{env `EUROSTAR_SERVICE_ROLE`}}",
    "metrics_remote_host": "{{env `METRICS_REMOTE_HOST`}}",
    "metrics_remote_port": "{{env `METRICS_REMOTE_PORT`}}",
    "puppet_dir": "{{env `PUPPET_DIR`}}",
    "puppet_environment": "{{env `PUPPET_ENVIRONMENT`}}",
    "puppet_product": "{{env `PUPPET_PRODUCT`}}",
    "puppet_role": "{{env `PUPPET_ROLE`}}",
    "puppet_service": "{{env `PUPPET_SERVICE`}}",
    "ssh_keypair_name": "{{env `SSH_KEYPAIR_NAME`}}",
    "ssh_private_key_file": "{{env `SSH_PRIVATE_KEY_FILE`}}",
    "ssh_username": "{{env `SSH_USERNAME`}}"
  },
  "builders": [
    {
      "name": "Packering {{user `puppet_role`}} Eurostar",
      "type": "amazon-ebs",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "region": "{{user `aws_region`}}",
      "source_ami": "{{user `base_ami`}}",
      "instance_type": "{{user `aws_instance_type`}}",
      "ami_name": "eurostar-{{user `puppet_product`}}-{{user `puppet_role`}}-{{user `puppet_environment`}}-{{user `build_id`}}",
      "ami_description": "eurostar-{{user `puppet_product`}}-{{user `puppet_role`}}-{{user `puppet_environment`}}-{{user `build_id`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "ssh_keypair_name": "{{user `ssh_keypair_name`}}",
      "ssh_private_key_file": "{{user `ssh_private_key_file`}}",
      "force_deregister": "true",
      "ssh_pty" : "true",
      "launch_block_device_mappings": [{
        "device_name": "/dev/xvda",
        "delete_on_termination": true,
        "volume_size": "8"
      }],
      "tags": {
        "Role": "{{user `puppet_role`}}",
        "Project": "{{user `puppet_product`}}",
        "Environment": "{{user `puppet_environment`}}",
        "BaseDomain": "{{user `base_domain`}}",
        "CodeBranch": "{{user `code_branch`}}",
        "BuildId": "{{user `build_id`}}",
        "BaseAmi": "{{user `base_ami`}}"
      }
    }
  ],

  "provisioners": [
    {
      "type": "file",
      "source": "{{user `puppet_dir`}}",
      "destination": "/tmp/"
    },
    {
      "type": "file",
      "source": "frontend",
      "destination": "/tmp/frontend"
    },
    {
      "type": "file",
      "source": "alertlogic.sh",
      "destination": "/tmp/alertlogic.sh"
    },
    {
      "type": "file",
      "source": "uploads/cob_bundle.tgz",
      "destination": "/tmp/cob_bundle.tgz"
    },
    {
      "type": "file",
      "source": "uploads/emon_bundle.tgz",
      "destination": "/tmp/emon_bundle.tgz"
    },
    {
      "type": "file",
      "source": "uploads/local_bin/",
      "destination": "/usr/local/bin"
    },
    {
      "type": "shell",
      "inline": [
        "sudo rm -rf /etc/puppet",
        "sudo cp -a /tmp/puppet /etc/puppet"
      ]
    },
    {
      "type": "puppet-masterless",
      "execute_command": "cd {{.WorkingDir}} && {{.FacterVars}} FACTER_operatingsystemmajrelease='6' sudo -E puppet apply --verbose --debug --detailed-exitcodes --parser=future -e \"hiera_include('classes')\" --environment={{user `puppet_environment`}} --hiera_config=/etc/puppet/hiera.yaml --modulepath='$confdir/environments/$environment/roles:$confdir/environments/$environment/modules:$confdir/environments/common/roles:$confdir/environments/common/modules:$confdir/modules'",
      "facter": {
        "branch_tag": "{{user `code_branch`}}",
        "build_id": "{{user `build_id`}}",
        "is_production": "false",
        "product": "{{user `puppet_product`}}",
        "environment": "{{user `puppet_environment`}}",
        "role": "{{user `puppet_role`}}",
        "base_domain": "{{user `base_domain`}}",
        "service": "{{user `puppet_service`}}",
        "env": "{{user `puppet_environment`}}",
        "access_key": "{{user `aws_access_key`}}",
        "secret_key": "{{user `aws_secret_key`}}"
      },
      "manifest_file": "{{pwd}}/default.pp",
      "staging_directory": "/tmp/puppet",
      "working_directory": "/etc/puppet",
      "prevent_sudo": "false"
    },
    {
      "type": "shell",
      "inline": [
        "# if [ {{user `puppet_environment`}} == 'prod' ]; then sudo /tmp/alertlogic.sh; fi",
        "if [ {{user `puppet_role`}} == 'frontend' ]; then sudo sed -i 's/%{environment}/{{user `puppet_environment`}}/g' /tmp/frontend/frontend.init; sudo bash /tmp/frontend/frontend.sh; fi",
        "if [ -f /etc/init.d/nginx ]; then sudo chkconfig nginx on; fi"
      ]
    },
    {
      "type": "shell",
      "script": "scripts/install_awscli.sh",
      "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E {{ .Path }}"
    },
    {
      "type": "shell",
      "script": "scripts/add_metrics_client_config.sh",
      "environment_vars": [
        "AWS_ACCESS_KEY_ID={{user `aws_access_key`}}",
        "AWS_SECRET_ACCESS_KEY={{user `aws_secret_key`}}"
      ],
      "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E {{ .Path }}"
    },
    {
      "type": "shell",
      "script": "scripts/clean_up_tmp_artefacts.sh",
      "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E {{ .Path }}"
    },
    {
      "type": "shell",
      "script": "scripts/create_eurostar_service_info.sh",
      "environment_vars": [
        "EUROSTAR_SERVICE_NAME={{user `eurostar_service_name`}}",
        "EUROSTAR_SERVICE_ROLE={{user `eurostar_service_role`}}",
        "EUROSTAR_RELEASE_VERSION={{user `eurostar_release_version`}}"
      ],
      "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E {{ .Path }}"
    },
    {
      "type": "shell",
      "script": "scripts/create_remote_metrics_info.sh",
      "environment_vars": [
        "METRICS_REMOTE_HOST={{user `metrics_remote_host`}}",
        "METRICS_REMOTE_PORT={{user `metrics_remote_port`}}"
      ],
      "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E {{ .Path }}"
    }
  ],

  "post-processors": [ ]
}
