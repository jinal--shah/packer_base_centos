{
  "variables": {
    "aws_access_key": "{{env `AWS_ACCESS_KEY`}}",
    "aws_secret_key": "{{env `AWS_SECRET_KEY`}}",
    "build_id": "{{env `BUILD_ID`}}",
    "code_branch": "{{env `CODE_BRANCH`}}",
    "puppet_branch": "{{env `PUPPET_BRANCH`}}",
    "aws_region": "{{env `AWS_REGION`}}",
    "base_ami": "{{env `BASE_AMI`}}",
    "aws_instance_type": "{{env `AWS_INSTANCE_TYPE`}}",
    "ssh_username": "{{env `SSH_USERNAME`}}",
    "ssh_keypair_name": "{{env `SSH_KEYPAIR_NAME`}}",
    "ssh_private_key_file": "{{env `SSH_PRIVATE_KEY_FILE`}}",
    "puppet_product": "{{env `PUPPET_PRODUCT`}}",
    "puppet_environment": "{{env `PUPPET_ENVIRONMENT`}}",
    "puppet_role": "{{env `PUPPET_ROLE`}}",
    "puppet_service": "{{env `PUPPET_SERVICE`}}",
    "base_domain": "{{env `BASE_DOMAIN`}}",
    "puppet_dir": "{{env `PUPPET_DIR`}}"

  },
  "builders": [
    {
      "name": "Packering {{user `puppet_role`}} Eurostar",
      "type": "amazon-ebs",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "region": "{{user `aws_region`}}",
      "source_ami": "{{user `base_ami`}}",
      "instance_type": "{{user `aws_instance_type`}}",
      "ami_name": "eurostar-{{user `puppet_product`}}-{{user `puppet_role`}}-{{user `puppet_environment`}}-{{user `build_id`}}",
      "ami_description": "eurostar-{{user `puppet_product`}}-{{user `puppet_role`}}-{{user `puppet_environment`}}-{{user `build_id`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "ssh_keypair_name": "{{user `ssh_keypair_name`}}",
      "ssh_private_key_file": "{{user `ssh_private_key_file`}}",
      "force_deregister": "true",
      "ssh_pty" : "true",
      "launch_block_device_mappings": [{
        "device_name": "/dev/xvda",
        "delete_on_termination": true,
        "volume_size": "8"
      }],
      "tags": {
        "Role": "{{user `puppet_role`}}",
        "Project": "{{user `puppet_product`}}",
        "Environment": "{{user `puppet_environment`}}",
        "BaseDomain": "{{user `base_domain`}}",
        "CodeBranch": "{{user `code_branch`}}",
        "BuildId": "{{user `build_id`}}",
	"BaseAmi": "{{user `base_ami`}}"
      }
    } 
  ],

  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "cd /home/ec2-user && sudo -ttt git clone {{user `puppet_repo`}} --branch {{user `puppet_branch`}}",
        "cd /home/ec2-user/eif_puppet && sudo -ttt /usr/local/bin/librarian-puppet clean && sudo -ttt /usr/local/bin/librarian-puppet install",
        "cd /home/ec2-user/ && sudo -ttt git clone git@github.com:ivangutev/puppet-rsyslog-eif.git",
        "cd /home/ec2-user/ && sudo -ttt rm -rf eif_puppet/modules/rsyslog/* && sudo -ttt cp -r puppet-rsyslog-eif/* eif_puppet/modules/rsyslog/",
        "sudo rm -rf /etc/puppet && sudo cp -a /home/ec2-user/eif_puppet /etc/puppet && sudo chown -R puppet:puppet /etc/puppet"
      ]
    },

    {
      "type": "puppet-masterless",
      "execute_command": "cd {{.WorkingDir}} && {{.FacterVars}} FACTER_operatingsystemmajrelease='6' sudo -E puppet apply --verbose --debug --detailed-exitcodes --parser=future -e \"hiera_include('classes')\" --environment={{user `puppet_environment`}} --hiera_config=/etc/puppet/hiera.yaml --modulepath='$confdir/environments/$environment/roles:$confdir/environments/$environment/modules:$confdir/environments/common/roles:$confdir/environments/common/modules:$confdir/modules'",
      "facter": {
        "branch_tag": "{{user `code_branch`}}",
        "build_id": "{{user `build_id`}}",
        "is_production": "false",
        "product": "{{user `puppet_product`}}",
        "environment": "{{user `puppet_environment`}}",
        "role": "{{user `puppet_role`}}",
        "base_domain": "{{user `base_domain`}}",
        "service": "{{user `puppet_service`}}",
        "env": "{{user `puppet_environment`}}",
      	"access_key": "{{user `aws_access_key`}}",
      	"secret_key": "{{user `aws_secret_key`}}"        
      },
      "manifest_file": "{{pwd}}/default.pp",
      "prevent_sudo": "false"
    },
    {
      "type": "shell",
      "inline": [
        "if [ -f /etc/init.d/nginx ]; then sudo chkconfig nginx on; fi",
        "sudo rm -rf /tmp/puppet || true",
        "sudo rm -rf /etc/puppet || true",
        "sudo rm -rf /tmp/* || true ",
        "sudo rm -rf /var/tmp/* || true",
        "sudo touch /packed-by-packer-{{timestamp}}"
      ]
    }
  ],

  "post-processors": [
      ]
}
